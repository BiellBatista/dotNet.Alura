Testes em .NET: testando integração com banco de dados
	01 - Definindo testes de integração
		01 - Apresentação
		02 - Preparando o ambiente: projeto inicial do curso
		03 - Iniciando em testes de integração
		04 - Baixo acoplamento
		05 - Para saber mais: InMemoryDb
		06 - Aproveitando recursos
		07 - Para saber mais: Setup e Teardown
		08 - Mão na massa: criando oferta no setup
		09 - Entendendo testes de integração (B)
		10 - O que aprendemos?
	02 - Compartilhando a conexão
		01 - Projeto da aula anterior
		02 - Analisando conexões
		03 - ClassFixture
		04 - CollectionFixture
		05 - Para saber mais: AssemblyFixture
		06 - Mão na massa: compartilhando a conexão em outra classe de teste
		07 - Entendendo Fixtures (D)
		08 - O que aprendemos?
	03 - Docker
		01 - Projeto da aula anterior
		02 - Preparando o ambiente: instalando Docker Desktop
		03 - Utilizando Docker
		04 - Criando imagens
		05 - Adicionando as tabelas
		06 - Faça como eu fiz: utilizando o Docker
		07 - Docker no cenário de testes (A / C / D)
		08 - O que aprendemos?
	04 - Inserindo valores no banco
		01 - Projeto da aula anterior
		02 - Adicionando dados ao banco
		03 - Compartilhando massa de dados
		04 - DataBuilder
		05 - Para saber mais: padrão DataBuilder
		06 - Mão na massa: Data Builders para rota e oferta viagem
		07 - Utilizando massa de dados para testes (D)
		08 - O que aprendemos?
	05 - Revertendo últimos testes
		01 - Projeto da aula anterior
		02 - Testes determinísticos
		03 - Revertendo alterações
		04 - Para saber mais: biblioteca Respawn
		05 - Desafio: criando outro banco
		06 - Revertendo dados após testes (C)
		07 - Projeto final do curso
		08 - Referências
		09 - O que aprendemos?
		10 - Conclusão
Testes em .NET: aplicando testes de integração em APIs
	01 - Preparando o ambiente para os testes
		01 - Apresentação
		02 - Preparando o ambiente: instalando Docker Desktop
		03 - Projeto inicial do curso
		04 - Configurando o projeto de testes
		05 - Para saber mais: testes de integração no ASP.NET Core
		06 - Configurando o serviço
		07 - Faça como eu fiz: configurando o serviço em memória
		08 - Primeiro método de teste
		09 - Testando API (A / B)
		10 - Desafio: teste um login inválido
		11 - O que aprendemos?
	02 - Compartilhando contexto
		01 - Projeto da aula anterior
		02 - Testando a inclusão de ofertas
		03 - Configurando a autenticação
		04 - Faça como eu fiz: incluindo uma oferta
		05 - Reaproveitando recursos com ClassFixture
		06 - Testando endpoints protegidos (A)
		07 - O que aprendemos?
	03 - Testes para endpoints (HTTP)
		01 - Projeto da aula anterior
		02 - Expondo o contexto
		03 - Faça como eu fiz: uma estratégia para acessar nossa base de dados
		04 - Consultando oferta pelo ID
		05 - Testando a deleção e atualização de um OfertaViagem
		06 - Para saber mais: status HTTP
		07 - Teste de integração (D)
		08 - Mão na massa: implementando a classe de testes para rota
		09 - O que aprendemos?
	04 - Consultas
		01 - Projeto da aula anterior
		02 - Preparando o ambiente: configuração do Bogus e Data Builders
		03 - Testando a consulta paginada
		04 - Dados na última página
		05 - Página não existente
		06 - Faça como eu fiz: quando a página não existe
		07 - Página negativa
		08 - Testando listas paginadas (D)
		09 - Projeto final do curso
		10 - O que aprendemos?
	05 - Desafio
		01 - Projeto para desafio
		02 - Preparando o ambiente: preparando o banco de dados
		03 - Testando o ScreenSound API